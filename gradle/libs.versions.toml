# Version catalog is a central place for you to declare and version dependencies
# https://docs.gradle.org/current/userguide/platforms.html#sub:version-catalog
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
androidx-lifecycle = "2.8.4"
androidx-annotation = "1.9.1"
androidx-arch-core-common = "2.2.0"
compose-multiplatform = "1.7.3"


kotlinxDatetime = "0.6.1"
kotlinxSerializationJSON = "1.7.2"
kotlinxCoroutines = "1.10.1"
kotlin = "2.1.10"
ktor = "3.0.3"
ksp = "2.1.10-1.0.29"
serialization = "2.1.10"
poet_version = "2.0.0"
logback_version = "1.5.16"
slf4j_version = "2.0.16"

[libraries]
kotlinGradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlinxDatetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinxSerialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJSON" }
kotlinxCoroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
ksp = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
logback = { group = "ch.qos.logback", name="logback-classic", version.ref="logback_version" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
slf4j = { group= "org.slf4j", name = "slf4j-api", version.ref = "slf4j_version" }


androidx-arch-core-common = { group = "androidx.arch.core", name = "core-common", version.ref = "androidx-arch-core-common" }
androidx-annotation = { group = "androidx.annotation", name = "annotation", version.ref = "androidx-annotation" }
ktor-html = { group = "io.ktor", name = "ktor-server-html-builder", version.ref = "ktor" }
ktor-core = { group = "io.ktor", name = "ktor-server-core", version.ref = "ktor" }

ktor-core-jvm = { group = "io.ktor", name = "ktor-server-core-jvm", version.ref = "ktor" }
ktor-resources = { group = "io.ktor", name = "ktor-server-resources", version.ref = "ktor" }
ktor-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-netty = { group =  "io.ktor", name="ktor-server-netty", version.ref = "ktor" }
ktor-cn = { group= "io.ktor", name = "ktor-server-content-negotiation", version.ref = "ktor" }
ktor-common = { group = "io.ktor", name = "ktor-server-host-common", version.ref = "ktor"}
ktor-yaml = { group = "io.ktor", name = "ktor-server-config-yaml", version.ref = "ktor"}


ktor-client-core = { group = "io.ktor", name = "ktor-client-core" , version.ref = "ktor" }
ktor-client-content = { group = "io.ktor", name = "ktor-client-content-negotiation" , version.ref = "ktor" }
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging" , version.ref = "ktor" }
ktor-client-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }


poet = {group = "com.squareup", name = "kotlinpoet", version.ref = "poet_version"}
poet-ksp = {group = "com.squareup", name = "kotlinpoet-ksp", version.ref = "poet_version"}

[bundles]
kotlinxEcosystem = ["kotlinxDatetime", "kotlinxSerialization", "kotlinxCoroutines"]
ktorServer = ["ktor-html", "ktor-core", "ktor-resources", "ktor-json", "ktor-cn", "ktor-common"]
ktorJvmServer = ["ktor-html", "ktor-core-jvm", "ktor-resources", "ktor-json", "ktor-cn", "ktor-common", "ktor-yaml"]

ktorClient = ["ktor-client-core", "ktor-client-content", "ktor-client-logging", "ktor-client-json"]
poet = ["poet", "poet-ksp"]
[plugins]
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp"}
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "serialization"}
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform" }

buildsrc = {id = "buildsrc.convention.kotlin-jvm" }
