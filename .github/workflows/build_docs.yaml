name: Build and Deploy Documentation (Writerside + Dokka API)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  pages: write

env:
  INSTANCE: 'Writerside/k'
  DOCKER_VERSION: '243.22562'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      algolia_artifact: ${{ steps.define-ids.outputs.algolia_artifact }}
      artifact: ${{ steps.define-ids.outputs.artifact }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Define instance id and artifacts
        id: define-ids
        run: |
          # Strip off any prefix and set up uppercase version for the artifact name
          INSTANCE=${INSTANCE#*/}
          INSTANCE_ID_UPPER=$(echo "$INSTANCE" | tr '[:lower:]' '[:upper:]')
          ARTIFACT="webHelp${INSTANCE_ID_UPPER}2-all.zip"
          ALGOLIA_ARTIFACT="algolia-indexes-${INSTANCE_ID_UPPER}.zip"

          echo "INSTANCE_ID_UPPER: $INSTANCE_ID_UPPER"
          echo "ARTIFACT: $ARTIFACT"
          echo "ALGOLIA_ARTIFACT: $ALGOLIA_ARTIFACT"

          # Export for later steps
          echo "INSTANCE_ID_UPPER=$INSTANCE_ID_UPPER" >> $GITHUB_ENV
          echo "ARTIFACT=$ARTIFACT" >> $GITHUB_ENV
          echo "ALGOLIA_ARTIFACT=$ALGOLIA_ARTIFACT" >> $GITHUB_ENV

          # Set outputs so that deploy job can reference the artifact filename
          echo "artifact=$ARTIFACT" >> $GITHUB_OUTPUT
          echo "algolia_artifact=$ALGOLIA_ARTIFACT" >> $GITHUB_OUTPUT

      - name: Build docs using Writerside Docker builder
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          docker-version: ${{ env.DOCKER_VERSION }}

      - name: Save artifact with build results
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: |
            artifacts/${{ steps.define-ids.outputs.artifact }}
            artifacts/report.json
            artifacts/${{ steps.define-ids.outputs.algolia_artifact }}
          retention-days: 7

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: artifacts

      - name: Test documentation
        uses: JetBrains/writerside-checker-action@v1
        with:
          instance: ${{ env.INSTANCE }}

  deploy:
    needs: [build, test]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      # 1. Download the Writerside artifact and unpack it
      - name: Download Writerside artifact
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: artifacts

      - name: Unzip Writerside artifact
        run: |
          mkdir -p dir
          unzip -O UTF-8 -qq "artifacts/${{ needs.build.outputs.artifact }}" -d dir
          echo "***** Unzipped Writerside docs *****"
          ls -R dir

      - name: Adjust directory structure if needed
        run: |
          # Check if there is a single subdirectory inside 'dir'
          subfolder=$(find dir -mindepth 1 -maxdepth 1 -type d | head -n 1)
          if [ -n "$subfolder" ]; then
          echo "Moving contents from $subfolder to dir"
          shopt -s dotglob  # include hidden files
          mv "$subfolder"/* dir/
          rm -rf "$subfolder"
          fi
          echo "Final directory structure:"
          ls -R dir
          

      - name: Build Dokka API docs
        run: ./gradlew :api:dokkaGenerate

      - name: Copy Dokka docs into site folder
        run: |
          mkdir -p dir/api-docs
          rm -rf dir/api-docs/*
          cp -R api/build/dokka/html/* dir/api-docs/
          echo "Copied Dokka docs into dir/api-docs"
          ls dir/api-docs

      # 3. Configure and deploy GitHub Pages from the merged site folder
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Package and upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dir

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
