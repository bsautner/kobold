name: CI and Documentation Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  id-token: write
  pages: write

env:
  INSTANCE: 'Writerside/k'
  DOCKER_VERSION: '243.22562'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      algolia_artifact: ${{ steps.define-ids.outputs.algolia_artifact }}
      artifact: ${{ steps.define-ids.outputs.artifact }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build with Gradle (includes Dokka)
        run: ./gradlew build dokkaGenerate

      - name: Define instance id and artifacts
        id: define-ids
        run: |
          INSTANCE=${INSTANCE#*/}
          INSTANCE_ID_UPPER=$(echo "$INSTANCE" | tr '[:lower:]' '[:upper:]')
          ARTIFACT="webHelp${INSTANCE_ID_UPPER}2-all.zip"
          ALGOLIA_ARTIFACT="algolia-indexes-${INSTANCE_ID_UPPER}.zip"

          echo "INSTANCE_ID_UPPER=$INSTANCE_ID_UPPER" >> $GITHUB_ENV
          echo "ARTIFACT=$ARTIFACT" >> $GITHUB_ENV
          echo "ALGOLIA_ARTIFACT=$ALGOLIA_ARTIFACT" >> $GITHUB_ENV
          echo "artifact=$ARTIFACT" >> $GITHUB_OUTPUT
          echo "algolia_artifact=$ALGOLIA_ARTIFACT" >> $GITHUB_OUTPUT

      - name: Copy Dokka HTML to api-docs
        run: |
          mkdir -p Writerside/api-docs
          if [ -d "api/build/dokka/html" ]; then
            cp -r api/build/dokka/html/* Writerside/api-docs/
          else
            echo "Dokka output directory not found!"
            exit 1
          fi
          ls -la .
          ls Writerside/api-docs
      - name: Print Folder Tree
        uses: jaywcjlove/github-action-folder-tree@main
        with:
          exclude: "node_modules|dist|.git|.husky"
          path: Writerside/api-docs
          depth: 5

  documentation:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Print Folder Tree 4
        uses: jaywcjlove/github-action-folder-tree@main
        with:
          exclude: "node_modules|dist|.git|.husky"
          path: .
          depth: 5

      - name: Build Writerside documentation
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          docker-version: ${{ env.DOCKER_VERSION }}

      - name: Save artifact with build results
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: |
            artifacts/${{ needs.build.outputs.artifact }}
            artifacts/report.json
            artifacts/${{ needs.build.outputs.algolia_artifact }}
          retention-days: 1
 

  deploy:
    needs: [build, documentation]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Download documentation artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: artifacts
      
      - name: Print Folder Tree 2
        uses: jaywcjlove/github-action-folder-tree@main
        with:
         exclude: "node_modules|dist|.git|.husky"
         path: .
         depth: 5

      - name: Verify artifact exists before extracting
        run: |
          echo "Listing artifacts"
          ls -A artifacts/
          if [ -z "$(ls -A artifacts/)" ]; then
            echo "Error: No artifacts found in artifacts/ directory"
            exit 1
          fi

      - name: Unzip artifact
        run: |
          ARTIFACT_NAME="${{ needs.build.outputs.artifact }}"
          echo $ARTIFACT_NAME
          echo "artiface name should be above"
          if [ -f "artifacts/$ARTIFACT_NAME" ]; then
            unzip -O UTF-8 -qq "artifacts/$ARTIFACT_NAME" -d dir
          else
            echo "Error: Artifact file not found: artifacts/$ARTIFACT_NAME"
            exit 1
          fi
          
      - name: Print Folder Tree 3
        uses: jaywcjlove/github-action-folder-tree@main
        with:
          exclude: "node_modules|dist|.git|.husky"
          path: .
          depth: 5

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4

      - name: Package and upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dir

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
